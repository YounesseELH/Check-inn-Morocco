{"ast":null,"code":"import { START_LOADING, END_LOADING, FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE, COMMENT, FETCH_BY_CREATOR } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const getHotel = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchHotel(id);\n    dispatch({\n      type: FETCH_POST,\n      payload: {\n        post: data\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getHotels = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    } = await api.fetchHotels(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getHotelsByCreator = name => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchHotelsByCreator(name);\n    dispatch({\n      type: FETCH_BY_CREATOR,\n      payload: {\n        data\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getHotelsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchHotelsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: {\n        data\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createHotel = (post, history) => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createHotel(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n    history.push(`/hotels`);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateHotel = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateHotel(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createHotelB = (post, history) => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createHotelB(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n    history.push(`/hotels`);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateHotelB = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateHotelB(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likeHotel = id => async dispatch => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  try {\n    const {\n      data\n    } = await api.likeHotel(id, user === null || user === void 0 ? void 0 : user.token);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const commentHotel = (value, id) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.commentHotel(value, id);\n    dispatch({\n      type: COMMENT,\n      payload: data\n    });\n    return data.comments;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteHotel = id => async dispatch => {\n  try {\n    await await api.deleteHotel(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/Admin/Desktop/gitHub-projects/Check-inn-Morocco/client/src/actions/hotels.js"],"names":["START_LOADING","END_LOADING","FETCH_ALL","FETCH_POST","FETCH_BY_SEARCH","CREATE","UPDATE","DELETE","LIKE","COMMENT","FETCH_BY_CREATOR","api","getHotel","id","dispatch","type","data","fetchHotel","payload","post","error","console","log","getHotels","page","currentPage","numberOfPages","fetchHotels","getHotelsByCreator","name","fetchHotelsByCreator","getHotelsBySearch","searchQuery","fetchHotelsBySearch","createHotel","history","push","updateHotel","createHotelB","updateHotelB","likeHotel","user","JSON","parse","localStorage","getItem","token","commentHotel","value","comments","deleteHotel"],"mappings":"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","sourcesContent":["import { START_LOADING, END_LOADING, FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE, COMMENT, FETCH_BY_CREATOR } from '../constants/actionTypes';\r\nimport * as api from '../api/index.js';\r\n\r\nexport const getHotel = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n\r\n    const { data } = await api.fetchHotel(id);\r\n\r\n    dispatch({ type: FETCH_POST, payload: { post: data } });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getHotels = (page) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n    const { data: { data, currentPage, numberOfPages } } = await api.fetchHotels(page);\r\n\r\n    dispatch({ type: FETCH_ALL, payload: { data, currentPage, numberOfPages } });\r\n    dispatch({ type: END_LOADING });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getHotelsByCreator = (name) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n    const { data: { data } } = await api.fetchHotelsByCreator(name);\r\n\r\n    dispatch({ type: FETCH_BY_CREATOR, payload: { data } });\r\n    dispatch({ type: END_LOADING });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getHotelsBySearch = (searchQuery) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n    const { data: { data } } = await api.fetchHotelsBySearch(searchQuery);\r\n\r\n    dispatch({ type: FETCH_BY_SEARCH, payload: { data } });\r\n    dispatch({ type: END_LOADING });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const createHotel = (post, history) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n    const { data } = await api.createHotel(post);\r\n\r\n    dispatch({ type: CREATE, payload: data });\r\n\r\n    history.push(`/hotels`);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updateHotel = (id, post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updateHotel(id, post);\r\n\r\n    dispatch({ type: UPDATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\nexport const createHotelB = (post, history) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n    const { data } = await api.createHotelB(post);\r\n\r\n    dispatch({ type: CREATE, payload: data });\r\n\r\n    history.push(`/hotels`);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updateHotelB = (id, post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updateHotelB(id, post);\r\n\r\n    dispatch({ type: UPDATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\nexport const likeHotel = (id) => async (dispatch) => {\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n  try {\r\n    const { data } = await api.likeHotel(id, user?.token);\r\n\r\n    dispatch({ type: LIKE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const commentHotel = (value, id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.commentHotel(value, id);\r\n\r\n    dispatch({ type: COMMENT, payload: data });\r\n\r\n    return data.comments;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deleteHotel = (id) => async (dispatch) => {\r\n  try {\r\n    await await api.deleteHotel(id);\r\n\r\n    dispatch({ type: DELETE, payload: id });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}