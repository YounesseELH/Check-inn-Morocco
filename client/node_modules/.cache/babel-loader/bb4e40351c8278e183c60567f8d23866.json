{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\dell\\\\Documents\\\\React\\\\Check-Inn-Morocco-teta\\\\Check-Inn-Morocco-V-Beta\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\dell\\\\Documents\\\\React\\\\Check-Inn-Morocco-teta\\\\Check-Inn-Morocco-V-Beta\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import{START_LOADING,END_LOADING,FETCH_ALL,FETCH_POST,FETCH_BY_SEARCH,CREATE,UPDATE,DELETE,LIKE,COMMENT,FETCH_BY_CREATOR}from'../constants/actionTypes';import*as api from'../api/index.js';export var getTrendPosts=function getTrendPosts(page){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _yield$api$fetchTrend,_yield$api$fetchTrend2,data,currentPage,numberOfPages;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch({type:START_LOADING});_context.next=4;return api.fetchTrendPosts(page);case 4:_yield$api$fetchTrend=_context.sent;_yield$api$fetchTrend2=_yield$api$fetchTrend.data;data=_yield$api$fetchTrend2.data;currentPage=_yield$api$fetchTrend2.currentPage;numberOfPages=_yield$api$fetchTrend2.numberOfPages;dispatch({type:FETCH_ALL,payload:{data:data,currentPage:currentPage,numberOfPages:numberOfPages}});dispatch({type:END_LOADING});_context.next=16;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 16:case\"end\":return _context.stop();}}},_callee,null,[[0,13]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var getPost=function getPost(id){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var _yield$api$fetchPost,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;dispatch({type:START_LOADING});_context2.next=4;return api.fetchPost(id);case 4:_yield$api$fetchPost=_context2.sent;data=_yield$api$fetchPost.data;dispatch({type:FETCH_POST,payload:{post:data}});_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var getPosts=function getPosts(page){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var _yield$api$fetchPosts,_yield$api$fetchPosts2,data,currentPage,numberOfPages;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;dispatch({type:START_LOADING});_context3.next=4;return api.fetchPosts(page);case 4:_yield$api$fetchPosts=_context3.sent;_yield$api$fetchPosts2=_yield$api$fetchPosts.data;data=_yield$api$fetchPosts2.data;currentPage=_yield$api$fetchPosts2.currentPage;numberOfPages=_yield$api$fetchPosts2.numberOfPages;dispatch({type:FETCH_ALL,payload:{data:data,currentPage:currentPage,numberOfPages:numberOfPages}});dispatch({type:END_LOADING});_context3.next=16;break;case 13:_context3.prev=13;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0);case 16:case\"end\":return _context3.stop();}}},_callee3,null,[[0,13]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var getPostsByCreator=function getPostsByCreator(name){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var _yield$api$fetchPosts3,data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;dispatch({type:START_LOADING});_context4.next=4;return api.fetchPostsByCreator(name);case 4:_yield$api$fetchPosts3=_context4.sent;data=_yield$api$fetchPosts3.data.data;dispatch({type:FETCH_BY_CREATOR,payload:{data:data}});dispatch({type:END_LOADING});_context4.next=13;break;case 10:_context4.prev=10;_context4.t0=_context4[\"catch\"](0);console.log(_context4.t0);case 13:case\"end\":return _context4.stop();}}},_callee4,null,[[0,10]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export var getPostsBySearch=function getPostsBySearch(searchQuery){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){var _yield$api$fetchPosts4,data;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;dispatch({type:START_LOADING});_context5.next=4;return api.fetchPostsBySearch(searchQuery);case 4:_yield$api$fetchPosts4=_context5.sent;data=_yield$api$fetchPosts4.data.data;dispatch({type:FETCH_BY_SEARCH,payload:{data:data}});dispatch({type:END_LOADING});_context5.next=13;break;case 10:_context5.prev=10;_context5.t0=_context5[\"catch\"](0);console.log(_context5.t0);case 13:case\"end\":return _context5.stop();}}},_callee5,null,[[0,10]]);}));return function(_x5){return _ref5.apply(this,arguments);};}();};export var createPost=function createPost(post,history){return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch){var _yield$api$createPost,data;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.prev=0;dispatch({type:START_LOADING});_context6.next=4;return api.createPost(post);case 4:_yield$api$createPost=_context6.sent;data=_yield$api$createPost.data;dispatch({type:CREATE,payload:data});history.push(\"/posts/\".concat(data._id));_context6.next=13;break;case 10:_context6.prev=10;_context6.t0=_context6[\"catch\"](0);console.log(_context6.t0);case 13:case\"end\":return _context6.stop();}}},_callee6,null,[[0,10]]);}));return function(_x6){return _ref6.apply(this,arguments);};}();};export var updatePost=function updatePost(id,post){return/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch){var _yield$api$updatePost,data;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.prev=0;_context7.next=3;return api.updatePost(id,post);case 3:_yield$api$updatePost=_context7.sent;data=_yield$api$updatePost.data;dispatch({type:UPDATE,payload:data});_context7.next=11;break;case 8:_context7.prev=8;_context7.t0=_context7[\"catch\"](0);console.log(_context7.t0);case 11:case\"end\":return _context7.stop();}}},_callee7,null,[[0,8]]);}));return function(_x7){return _ref7.apply(this,arguments);};}();};export var likePost=function likePost(id){return/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(dispatch){var user,_yield$api$likePost,data;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:user=JSON.parse(localStorage.getItem('profile'));_context8.prev=1;_context8.next=4;return api.likePost(id,user===null||user===void 0?void 0:user.token);case 4:_yield$api$likePost=_context8.sent;data=_yield$api$likePost.data;dispatch({type:LIKE,payload:data});_context8.next=12;break;case 9:_context8.prev=9;_context8.t0=_context8[\"catch\"](1);console.log(_context8.t0);case 12:case\"end\":return _context8.stop();}}},_callee8,null,[[1,9]]);}));return function(_x8){return _ref8.apply(this,arguments);};}();};export var commentPost=function commentPost(value,id){return/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(dispatch){var _yield$api$comment,data;return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_context9.prev=0;_context9.next=3;return api.comment(value,id);case 3:_yield$api$comment=_context9.sent;data=_yield$api$comment.data;dispatch({type:COMMENT,payload:data});return _context9.abrupt(\"return\",data.comments);case 9:_context9.prev=9;_context9.t0=_context9[\"catch\"](0);console.log(_context9.t0);case 12:case\"end\":return _context9.stop();}}},_callee9,null,[[0,9]]);}));return function(_x9){return _ref9.apply(this,arguments);};}();};export var deletePost=function deletePost(id){return/*#__PURE__*/function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(dispatch){return _regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:_context10.prev=0;_context10.next=3;return api.deletePost(id);case 3:dispatch({type:DELETE,payload:id});_context10.next=9;break;case 6:_context10.prev=6;_context10.t0=_context10[\"catch\"](0);console.log(_context10.t0);case 9:case\"end\":return _context10.stop();}}},_callee10,null,[[0,6]]);}));return function(_x10){return _ref10.apply(this,arguments);};}();};/*\n\n\n\n\nimport { START_LOADING, END_LOADING, FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE, COMMENT, FETCH_BY_CREATOR } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\n\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const { data } = await api.fetchPost(id);\n\n    dispatch({ type: FETCH_POST, payload: { post: data } });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPosts = (page) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data, currentPage, numberOfPages } } = await api.fetchPosts(page);\n\n    dispatch({ type: FETCH_ALL, payload: { data, currentPage, numberOfPages } });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPostsByCreator = (name) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data } } = await api.fetchPostsByCreator(name);\n\n    dispatch({ type: FETCH_BY_CREATOR, payload: { data } });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\n\n    dispatch({ type: FETCH_BY_SEARCH, payload: { data } });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createPost = (post, history) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.createPost(post);\n\n    dispatch({ type: CREATE, payload: data });\n\n    history.push(`/posts/${data._id}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  try {\n    const { data } = await api.likePost(id, user?.token);\n\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const commentPost = (value, id) => async (dispatch) => {\n  try {\n    const { data } = await api.comment(value, id);\n\n    dispatch({ type: COMMENT, payload: data });\n\n    return data.comments;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await await api.deletePost(id);\n\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n\n*/","map":{"version":3,"sources":["C:/Users/dell/Documents/React/Check-Inn-Morocco-teta/Check-Inn-Morocco-V-Beta/client/src/actions/posts.js"],"names":["START_LOADING","END_LOADING","FETCH_ALL","FETCH_POST","FETCH_BY_SEARCH","CREATE","UPDATE","DELETE","LIKE","COMMENT","FETCH_BY_CREATOR","api","getTrendPosts","page","dispatch","type","fetchTrendPosts","data","currentPage","numberOfPages","payload","console","log","getPost","id","fetchPost","post","getPosts","fetchPosts","getPostsByCreator","name","fetchPostsByCreator","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","history","push","_id","updatePost","likePost","user","JSON","parse","localStorage","getItem","token","commentPost","value","comment","comments","deletePost"],"mappings":"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":["\n\nimport { START_LOADING, END_LOADING, FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE, COMMENT, FETCH_BY_CREATOR } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\n\nexport const getTrendPosts = (page) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data, currentPage, numberOfPages } } = await api.fetchTrendPosts(page);\n\n    dispatch({ type: FETCH_ALL, payload: { data, currentPage, numberOfPages } });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const { data } = await api.fetchPost(id);\n\n    dispatch({ type: FETCH_POST, payload: { post: data } });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPosts = (page) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data, currentPage, numberOfPages } } = await api.fetchPosts(page);\n\n    dispatch({ type: FETCH_ALL, payload: { data, currentPage, numberOfPages } });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPostsByCreator = (name) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data } } = await api.fetchPostsByCreator(name);\n\n    dispatch({ type: FETCH_BY_CREATOR, payload: { data } });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\n\n    dispatch({ type: FETCH_BY_SEARCH, payload: { data } });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createPost = (post, history) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.createPost(post);\n\n    dispatch({ type: CREATE, payload: data });\n\n    history.push(`/posts/${data._id}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  try {\n    const { data } = await api.likePost(id, user?.token);\n\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const commentPost = (value, id) => async (dispatch) => {\n  try {\n    const { data } = await api.comment(value, id);\n\n    dispatch({ type: COMMENT, payload: data });\n\n    return data.comments;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await await api.deletePost(id);\n\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n\n\n\n\nimport { START_LOADING, END_LOADING, FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE, COMMENT, FETCH_BY_CREATOR } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\n\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const { data } = await api.fetchPost(id);\n\n    dispatch({ type: FETCH_POST, payload: { post: data } });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPosts = (page) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data, currentPage, numberOfPages } } = await api.fetchPosts(page);\n\n    dispatch({ type: FETCH_ALL, payload: { data, currentPage, numberOfPages } });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPostsByCreator = (name) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data } } = await api.fetchPostsByCreator(name);\n\n    dispatch({ type: FETCH_BY_CREATOR, payload: { data } });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\n\n    dispatch({ type: FETCH_BY_SEARCH, payload: { data } });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createPost = (post, history) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.createPost(post);\n\n    dispatch({ type: CREATE, payload: data });\n\n    history.push(`/posts/${data._id}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  try {\n    const { data } = await api.likePost(id, user?.token);\n\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const commentPost = (value, id) => async (dispatch) => {\n  try {\n    const { data } = await api.comment(value, id);\n\n    dispatch({ type: COMMENT, payload: data });\n\n    return data.comments;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await await api.deletePost(id);\n\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n\n*/"]},"metadata":{},"sourceType":"module"}