{"ast":null,"code":"import { START_LOADING, END_LOADING, FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE, COMMENT, FETCH_BY_CREATOR } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const getRestau = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchRestau(id);\n    dispatch({\n      type: FETCH_POST,\n      payload: {\n        post: data\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getRestaus = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    } = await api.fetchRestaus(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getRestausByCreator = name => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchRestausByCreator(name);\n    dispatch({\n      type: FETCH_BY_CREATOR,\n      payload: {\n        data\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getRestausBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchRestausBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: {\n        data\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createRestau = (post, history) => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createRestau(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n    history.push(`/restaus`);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateRestau = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateRestau(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likeRestau = id => async dispatch => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  try {\n    const {\n      data\n    } = await api.likeRestau(id, user === null || user === void 0 ? void 0 : user.token);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const commentRestau = (value, id) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.commentRestau(value, id);\n    dispatch({\n      type: COMMENT,\n      payload: data\n    });\n    return data.comments;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteRestau = id => async dispatch => {\n  try {\n    await await api.deleteRestau(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/dell/Documents/React/Check-Inn-Morocco-teta/Check-Inn-Morocco-V-Beta/client/src/actions/restaus.js"],"names":["START_LOADING","END_LOADING","FETCH_ALL","FETCH_POST","FETCH_BY_SEARCH","CREATE","UPDATE","DELETE","LIKE","COMMENT","FETCH_BY_CREATOR","api","getRestau","id","dispatch","type","data","fetchRestau","payload","post","error","console","log","getRestaus","page","currentPage","numberOfPages","fetchRestaus","getRestausByCreator","name","fetchRestausByCreator","getRestausBySearch","searchQuery","fetchRestausBySearch","createRestau","history","push","updateRestau","likeRestau","user","JSON","parse","localStorage","getItem","token","commentRestau","value","comments","deleteRestau"],"mappings":"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","sourcesContent":["import { START_LOADING, END_LOADING, FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE, COMMENT, FETCH_BY_CREATOR } from '../constants/actionTypes';\r\nimport * as api from '../api/index.js';\r\n\r\nexport const getRestau = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n\r\n    const { data } = await api.fetchRestau(id);\r\n\r\n    dispatch({ type: FETCH_POST, payload: { post: data } });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getRestaus = (page) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n    const { data: { data, currentPage, numberOfPages } } = await api.fetchRestaus(page);\r\n\r\n    dispatch({ type: FETCH_ALL, payload: { data, currentPage, numberOfPages } });\r\n    dispatch({ type: END_LOADING });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getRestausByCreator = (name) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n    const { data: { data } } = await api.fetchRestausByCreator(name);\r\n\r\n    dispatch({ type: FETCH_BY_CREATOR, payload: { data } });\r\n    dispatch({ type: END_LOADING });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getRestausBySearch = (searchQuery) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n    const { data: { data } } = await api.fetchRestausBySearch(searchQuery);\r\n\r\n    dispatch({ type: FETCH_BY_SEARCH, payload: { data } });\r\n    dispatch({ type: END_LOADING });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const createRestau = (post, history) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n    const { data } = await api.createRestau(post);\r\n\r\n    dispatch({ type: CREATE, payload: data });\r\n\r\n    history.push(`/restaus`);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updateRestau = (id, post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updateRestau(id, post);\r\n\r\n    dispatch({ type: UPDATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const likeRestau = (id) => async (dispatch) => {\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n  try {\r\n    const { data } = await api.likeRestau(id, user?.token);\r\n\r\n    dispatch({ type: LIKE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const commentRestau = (value, id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.commentRestau(value, id);\r\n\r\n    dispatch({ type: COMMENT, payload: data });\r\n\r\n    return data.comments;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deleteRestau = (id) => async (dispatch) => {\r\n  try {\r\n    await await api.deleteRestau(id);\r\n\r\n    dispatch({ type: DELETE, payload: id });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}